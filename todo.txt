
* implement all attribute bindings

- по doubleclick на autocomplete-popover удалять его и фокусировать инпут

- прописать в шаблоне mx-autocomplete данные, получаемые из атрибутов mx-picker ( посмотреть как в старом коде сделано )

- выделить что можно из md-autocomplete в link mx-picker

- сделать hint не boolean а string

- рефакторить код с учетом использования контроллеров, сервисов
- уменьшить кол-во dom-манипуляций

- максимально использовать имеющийся код из baseController ( найти аналоги того что используется в md-autocomplete - link() )

- все кроме DOM-манипуляций вынести в link \ service + наследование сервисов а не контроллеров

- придумать где хранить данные уникальные для каждой директивы ( вынести то что хранится сейчас в service обратно в контроллер )

- валидация при focus / blur

- сначала использовать функционал baseController, а потом только рефакторить часть функционала baseController в отдельный service

- сделать чтобы нельзя было сфокусировать инпут если readOnly

- показывать hints если нет error

- сделать selectedItem вместо selectedItems

- сделать функцию фильтрации по любому фрагменту внутри слова

- add unit tests

--------------------------------------------------------------------------------

# singlePicker
    -singlePickerController + commonPickerProperties

# autocompletePicker
    -autocompleteController + singlePickerController + BasePickerProperties

{
    searchText   : 'Default Value',
    selectedItem : 'Default object'
}

--------------------------------------------------------------------------------

# как должно readOnly работать? становиться disabled после того как хотя бы одно значение выбрано?
    ng-disabled="vm._disabled || vm._readOnly"
    readonly="(vm._disabled || vm._readOnly) && vm.selectedItems.length > 0"
 
# типы hints ?

--------------------------------------------------------------------------------

http://www.bennadel.com/blog/2926-overriding-directive-definitions-in-angularjs.htm
http://www.webdeveasy.com/angularjs-data-model/
